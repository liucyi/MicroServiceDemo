{
  "ReRoutes": [
    { //MicroService.Api1/swagger
      "DownstreamPathTemplate": "/doc/MicroService.Api1/swagger.json",
      "DownstreamScheme": "http",
      "ServiceName": "MicroService.Api1",
      "LoadBalancer": "RoundRobin",
      "DownstreamHostAndPorts": [
        {
          "Host": "127.0.0.1",
          "Port": "5001"
        }
      ],
      "UseServiceDiscovery": true,
      "UpstreamPathTemplate": "/doc/MicroService.Api1/swagger.json",
      "UpstreamHttpMethod": [ "GET", "POST", "DELETE", "PUT" ]
    }, //MicroService.Api2/swagger
    {
      "DownstreamPathTemplate": "/doc/MicroService.Api2/swagger.json",
      "DownstreamScheme": "http",
      "ServiceName": "MicroService.Api2",
      "DownstreamHostAndPorts": [
        {
          "Host": "127.0.0.1",
          "Port": "5002"
        }
      ],
      "LoadBalancer": "RoundRobin",
      "UseServiceDiscovery": true,
      "UpstreamPathTemplate": "/doc/MicroService.Api2/swagger.json",
      "UpstreamHttpMethod": [ "GET", "POST", "DELETE", "PUT" ]
    },
    // API:CAS.ClientService
    {
      "DownstreamPathTemplate": "/api/OneValues",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "127.0.0.1",
          "Port": "5001"
        },
        {
          "Host": "127.0.0.1",
          "Port": "5002"
        }
      ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "ServiceName": "MicroService.Api1",
      "UpstreamPathTemplate": "/OneValues",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "RateLimitOptions": {
        "ClientWhitelist": [ "admin" ], // 白名单
        "EnableRateLimiting": true, // 是否启用限流
        "Period": "1m", // 统计时间段：1s, 5m, 1h, 1d
        "PeriodTimespan": 15, // 多少秒之后客户端可以重试
        "Limit": 10 // 在统计时间段内允许的最大请求数量
      }
    }, // API:CAS.ClientService
    {
      "DownstreamPathTemplate": "/api/TwoValues",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "127.0.0.1",
          "Port": "5002"
        }
      ],
      "ServiceName": "MicroService.Api2",
      "UpstreamPathTemplate": "/TwoValues",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "RateLimitOptions": {
        "ClientWhitelist": [ "admin" ], // 白名单
        "EnableRateLimiting": true, // 是否启用限流
        "Period": "1m", // 统计时间段：1s, 5m, 1h, 1d
        "PeriodTimespan": 15, // 多少秒之后客户端可以重试
        "Limit": 10 // 在统计时间段内允许的最大请求数量
      }
    }, // API:CAS.ClientService
    {
      "DownstreamPathTemplate": "/api/notice",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "127.0.0.1",
          "Port": "5000"
        }
      ],
      "ServiceName": "MicroService.Api2",
      "UpstreamPathTemplate": "/notice",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "RateLimitOptions": {
        "ClientWhitelist": [ "admin" ], // 白名单
        "EnableRateLimiting": true, // 是否启用限流
        "Period": "1m", // 统计时间段：1s, 5m, 1h, 1d
        "PeriodTimespan": 15, // 多少秒之后客户端可以重试
        "Limit": 10 // 在统计时间段内允许的最大请求数量
      }
    }
  ],
  "GlobalConfiguration": {
    //"BaseUrl": "https://api.mybusiness.com"
    "ServiceDiscoveryProvider": {
      "Host": "192.168.3.38", // Consul Service IP
      "Port": 8500 // Consul Service Port
    }
  },
  "watches": [
    {
      "type": "checks",
      "handler_type": "http",
      "state": "critical",
      "http_handler_config": {
       "path": "http://127.0.0.1:5000/notice",
        "method": "GET",
        "timeout": "10s",
        "header": { "Authorization": [ "token" ] }
      }
    }
  ],
  "RateLimitOptions": {
    "DisableRateLimitHeaders": false, // Http头  X-Rate-Limit 和 Retry-After 是否禁用
    "QuotaExceededMessage": "Too many requests, are you OK?", // 当请求过载被截断时返回的消息
    "HttpStatusCode": 999, // 当请求过载被截断时返回的http status
    "ClientIdHeader": "client_id" // 用来识别客户端的请求头，默认是 ClientId
  }
}